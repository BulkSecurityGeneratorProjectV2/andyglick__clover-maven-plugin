<project name="money_demo" default="code.compile" basedir=".">
    <description>
        money build file
    </description>

    <property name="src" location="src/main/java"/>
    <property name="test.src" location="src/test/java"/>
    <property name="app.build" location="build/app"/>
    <property name="test.build" location="build/test"/>
    <property name="test.result" location="build/testresult"/>
    <property name="junit.jar" location="lib/junit-3.8.2.jar"/>


    <property name="clover.jar" location="../lib/clover.jar"/>
    <taskdef resource="cloverlib.xml" classpath="${clover.jar}"/>

    <path id="build.classpath">
        <pathelement path="${junit.jar}"/>
        <pathelement path="${app.build}"/>
        <pathelement path="${clover.jar}"/>
    </path>

    <path id="testbuild.classpath">
        <path refid="build.classpath"/>
        <pathelement path="${test.build}"/>
    </path>


    <target name="code.compile"
            description="Creates ${app.build} directory and compiles sources from ${src} to ${app.build}">
        <mkdir dir="${app.build}"/>
        <javac srcdir="${src}" destdir="${app.build}" classpathref="build.classpath" source="1.4"/>
    </target>

    <target name="test.compile" depends="code.compile"
            description="Creates ${test.build} directory and compiles sources from ${test.src} to ${test.build}">
        <mkdir dir="${test.build}"/>
        <javac srcdir="${test.src}"
               destdir="${test.build}"
               classpathref="testbuild.classpath" source="1.4"/>
    </target>

    <target name="test.run" depends="test.compile" description="Runs the tests">
        <mkdir dir="${test.result}"/>
        <junit fork="yes" printsummary="true">
            <classpath refid="testbuild.classpath"/>
            <formatter type="xml"/>
            <batchtest fork="yes" todir="${test.result}">
                <fileset dir="${test.src}" includes="**/*Test.java"/>
            </batchtest>
        </junit>
        <clover-historypoint historydir="history"/>
    </target>

    <target name="with.clover">
        <clover-setup/>
    </target>

    <clover-columns id="clover.columns">
        <totalChildren/>
        <expression title="Sum Global">Complexity^2 * ((1 - %CoveredElements/100)^3) + Complexity</expression>
        <lineCount format="raw"/>
        <complexity format="raw"/>
        <coveredElements format="raw" min="3900" max="5000"/>
        <uncoveredBranches format="raw"/>
        <uncoveredStatements format="raw"/>
        <uncoveredMethods format="raw"/>
        <uncoveredElements format="raw"/>
        <totalPercentageCovered format="longbar" min="75"/>
    </clover-columns>


    <target name="clover.report" depends="test.run" description="Generates a Clover report">

        <clover-report>
            <current outfile="clover_html">
                <format type="html"/>
                <columns refId="clover.columns"/>
            </current>
            <historical historydir="history"
                        outfile="clover_html"
                        title="Clover History">
                <format type="html"/>
                <coverage/>
                <overview/>
                <metrics/>
                <movers/>
                <movers interval="1w" threshold="5%"/>
                <movers interval="1d" threshold="0%"/>
                <chart logScale="true" title="Custom Columns">
                    <columns refid="clover.columns"/>
                </chart>
                <coverage logScale="true" title="Custom Coverage Columns">
                    <columns refid="clover.columns"/>
                </coverage>
            </historical>

        </clover-report>

    </target>

    <target name="clean">
        <delete dir="build"/>
        <clover-clean/>
    </target>
</project>
